name: Test

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Test

    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache Cargo
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            **/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.62
          default: true

      - name: Install `just`
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache Node
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Cache Poetry
        uses: actions/cache@v3
        with:
          path: "**/.venv"
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install Poetry
        uses: Gr1N/setup-poetry@v7

      - name: Test C++
        run: just cpp/hello/test

      - name: Test Node.js
        run: just nodejs/hello/test

      - name: Test Python
        run: just python/hello/test

      - name: Test Rust
        run: just rust/hello/test

      - name: Setup `wasm-pack`
        if: runner.os != 'Windows'
        uses: jetli/wasm-pack-action@v0.3.0

      - name: Test Wasm
        if: runner.os != 'Windows'
        run: |
          just wasm/hello-emscripten/test
          just wasm/hello-wasm-pack/test
