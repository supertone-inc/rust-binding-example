extend = "../../Makefile.toml"

[env]
PATH = {source = "${CARGO_MAKE_RUST_TARGET_OS}", default_value = "${CARGO_MAKE_WORKING_DIRECTORY}/bin:${PATH}", mapping = {"windows" = "${CARGO_MAKE_WORKING_DIRECTORY}\\bin;${CARGO_MAKE_WORKING_DIRECTORY}\\${PROJECT_NAME}\\lib;${PATH}"}}

[tasks.cbindgen]
install_script = '''
#!@shell
cargo install cbindgen --root .
'''
script = '''
#!@shell
cbindgen --crate ${CARGO_MAKE_CRATE_NAME} --output ${PROJECT_NAME}/include/${PROJECT_NAME}.h
'''

[tasks.build]
clear = true
dependencies = ["cbindgen"]

[tasks.build.windows]
script = '''
#!@shell
cargo build || exit $?
mkdir -p ${PROJECT_NAME}/lib
cp ../../target/debug/${PROJECT_NAME}.dll ${PROJECT_NAME}/lib/${PROJECT_NAME}.dll || exit $?
cp ../../target/debug/${PROJECT_NAME}.dll.lib ${PROJECT_NAME}/lib/${PROJECT_NAME}.lib || exit $?
'''

[tasks.build.mac]
script = '''
cargo build
mkdir -p ${PROJECT_NAME}/lib
cp ../../target/debug/lib${PROJECT_NAME}.dylib ${PROJECT_NAME}/lib/lib${PROJECT_NAME}.dylib
'''

[tasks.build.linux]
script = '''
cargo build
mkdir -p ${PROJECT_NAME}/lib
cp ../../target/debug/lib${PROJECT_NAME}.so ${PROJECT_NAME}/lib/lib${PROJECT_NAME}.so
'''

[tasks.test]
clear = true
dependencies = ["build"]
script = '''
#!@shell
cmake -S . -B build || exit $?
cmake --build build || exit $?
cd build && ctest -V || exit $?
'''
