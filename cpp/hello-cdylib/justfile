LIB_NAME := "hello_cpp"

LIB_FILE_NAME := if os() == "windows" {
    LIB_NAME + ".dll"
} else if os() == "macos" {
    "lib" + LIB_NAME + ".dylib"
} else {
    "lib" + LIB_NAME + ".so"
}

RUST_TOOLCHAIN := `rustup default`

CARGO_BUILD_TARGET := env_var_or_default("CARGO_BUILD_TARGET", "")

TARGET_DIR_NAME := if CARGO_BUILD_TARGET != "" {
    CARGO_BUILD_TARGET
} else {
    "."
}

TARGET_DIR := "../../target/" + TARGET_DIR_NAME + "/debug"

build:
    cargo build
    rm -rf hello
    cp -R ../hello/hello hello
    mkdir -p hello/lib/{{TARGET_DIR_NAME}}
    cp {{TARGET_DIR}}/{{LIB_FILE_NAME}} hello/lib/{{LIB_FILE_NAME}}

    if [ {{os()}} = "windows" ]; then \
        cp {{TARGET_DIR}}/{{LIB_FILE_NAME}}.lib hello/lib/{{LIB_NAME}}.lib; \
    fi

test: build
    cmake \
        -S ../hello/tests \
        -B tests/build \
        -D HELLO_DIR="{{absolute_path("hello")}}"
    cmake --build tests/build --clean-first
    ctest --test-dir tests/build -V --no-tests=error
